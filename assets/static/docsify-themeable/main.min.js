!function () {
    var t = !1;

    function e(t, e) {
        let cssHref = sessionStorage.getItem("activeStylesheetHref");
        if (cssHref != null && cssHref.endsWith("vue.css") && e == 'light') {
            return
        }
        //
        if (cssHref != null && cssHref.endsWith("dark.css") && e == 'dark') {
            return
        }
        var n = document.querySelector('link[href*="' + t + '"],link[title="' + e + '"]');
        !n && t ? ((n = document.createElement("link")).setAttribute("href", t), n.setAttribute("rel", "stylesheet"), n.setAttribute("title", e), document.head.appendChild(n), n.addEventListener("load", (function t() {
            n.removeEventListener("load", t), r(n)
        }))) : n && r(n)
    }

    function r(t) {
        var e = t.getAttribute("href"), r = t.getAttribute("title"),
            n = document.querySelectorAll('link[title]:not([href*="' + e + '"]):not([title="' + r + '"])');
        t.setAttribute("rel", (t.rel || "").replace(/\s*alternate/g, "").trim()), t.disabled = !0, t.disabled = !1, sessionStorage.setItem("activeStylesheetHref", e);
        for (var i = 0; i < n.length; i++) {
            var a = n[i];
            if (a.disabled = !0, window.browsersyncObserver) {
                var l = a.getAttribute("rel") || "", o = l.indexOf("alternate") > -1 ? l : (l + " alternate").trim();
                a.setAttribute("rel", o)
            }
        }
        (window.$docsify || {}).themeable && window.$docsify.themeable.util.cssVars()
    }

    t || (t = !0, document.addEventListener("DOMContentLoaded", (function () {
        var t = sessionStorage.getItem("activeStylesheetHref");
        t && e(t)
    })), document.addEventListener("click", (function (t) {
        var r = t.target.getAttribute("data-link-href"), n = t.target.getAttribute("data-link-title");
        (r || n) && (e(r, n = n || t.target.textContent || "_" + Math.random().toString(36).substr(2, 9)), t.preventDefault())
    })))
}();